files:
  "/etc/nginx/nginx.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      user nginx;
      worker_processes auto;
      error_log /var/log/nginx/error.log;
      pid /run/nginx.pid;

      # Load dynamic modules
      include /usr/share/nginx/modules/*.conf;

      events {
          worker_connections 1024;
          use epoll;
          multi_accept on;
      }

      http {
          # Fix types_hash warnings by increasing hash sizes
          types_hash_max_size 8192;
          types_hash_bucket_size 256;
          
          # Basic settings
          sendfile on;
          tcp_nopush on;
          tcp_nodelay on;
          keepalive_timeout 65;
          client_max_body_size 50M;
          
          include /etc/nginx/mime.types;
          default_type application/octet-stream;

          # Logging format
          log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';

          log_format healthd '$msec"$uri"'
                           '$status"$request_time"$upstream_response_time"'
                           '$http_x_forwarded_for';

          access_log /var/log/nginx/access.log main;

          # Gzip compression
          gzip on;
          gzip_vary on;
          gzip_min_length 1024;
          gzip_proxied any;
          gzip_comp_level 6;
          gzip_types
              application/atom+xml
              application/javascript
              application/json
              application/ld+json
              application/manifest+json
              application/rss+xml
              application/vnd.geo+json
              application/vnd.ms-fontobject
              application/x-font-ttf
              application/x-web-app-manifest+json
              application/xhtml+xml
              application/xml
              font/opentype
              image/bmp
              image/svg+xml
              image/x-icon
              text/cache-manifest
              text/css
              text/plain
              text/vcard
              text/vnd.rim.location.xloc
              text/vtt
              text/x-component
              text/x-cross-domain-policy;

          # Upstream configuration for Node.js app
          upstream nodejs {
              server 127.0.0.1:8000;  # App runs on port 8000, Nginx proxies from port 80
              keepalive 32;
              keepalive_requests 100;
              keepalive_timeout 60s;
          }

          # Main server configuration
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name _;
              root /var/app/current/public;

              # Security headers
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-XSS-Protection "1; mode=block" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header Referrer-Policy "no-referrer-when-downgrade" always;
              add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

              # Health check endpoint for Application Load Balancer
              location /health {
                  access_log off;
                  proxy_pass http://nodejs;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }

              # Block common attack paths
              location ~* \.(php|asp|aspx|jsp|cgi)$ {
                  return 404;
              }
              
              location ~* /(admin|wp-admin|wp-login|phpmyadmin|boaform|phpinfo) {
                  return 404;
              }

              # WebSocket support for Socket.IO
              location /socket.io/ {
                  proxy_pass http://nodejs;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_cache_bypass $http_upgrade;
                  proxy_read_timeout 86400;
              }

              # Static file serving with caching
              location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                  expires 1y;
                  add_header Cache-Control "public, immutable";
                  try_files $uri @nodejs;
              }

              # API routes and all other requests
              location / {
                  # Request timeout and buffer settings
                  proxy_connect_timeout 60s;
                  proxy_send_timeout 60s;
                  proxy_read_timeout 60s;
                  proxy_buffer_size 4k;
                  proxy_buffers 8 4k;
                  proxy_busy_buffers_size 8k;

                  # Proxy to Node.js app
                  proxy_pass http://nodejs;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_set_header X-Forwarded-Host $server_name;
                  proxy_cache_bypass $http_upgrade;
              }

              # Fallback for static files not found
              location @nodejs {
                  proxy_pass http://nodejs;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }

          # Include additional server configurations
          include /etc/nginx/conf.d/*.conf;
      }

option_settings:
  aws:elasticbeanstalk:application:environment:
    # PORT and NODE_ENV moved to platform.config to avoid duplicates
    npm_config_build_from_source: "false"
    npm_config_cache: "/tmp/.npm"
    npm_config_target_platform: "linux"
    npm_config_target_arch: "x64" 